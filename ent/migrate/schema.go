// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// ProxiesColumns holds the columns for the "proxies" table.
	ProxiesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "type", Type: field.TypeEnum, Enums: []string{"HTTP", "HTTPS", "SOCKS4", "SOCKS5", "SOCKS5H"}},
		{Name: "ip", Type: field.TypeString},
		{Name: "port", Type: field.TypeUint16},
		{Name: "username", Type: field.TypeString},
		{Name: "password", Type: field.TypeString},
		{Name: "rotating", Type: field.TypeBool, Default: false},
		{Name: "proxy_proxy_provider", Type: field.TypeInt, Nullable: true},
	}
	// ProxiesTable holds the schema information for the "proxies" table.
	ProxiesTable = &schema.Table{
		Name:       "proxies",
		Columns:    ProxiesColumns,
		PrimaryKey: []*schema.Column{ProxiesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "proxies_proxy_providers_proxyProvider",
				Columns:    []*schema.Column{ProxiesColumns[7]},
				RefColumns: []*schema.Column{ProxyProvidersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "proxy_ip_port",
				Unique:  false,
				Columns: []*schema.Column{ProxiesColumns[2], ProxiesColumns[3]},
			},
			{
				Name:    "proxy_ip_port_username_password",
				Unique:  true,
				Columns: []*schema.Column{ProxiesColumns[2], ProxiesColumns[3], ProxiesColumns[4], ProxiesColumns[5]},
			},
		},
	}
	// ProxyProvidersColumns holds the columns for the "proxy_providers" table.
	ProxyProvidersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "username", Type: field.TypeString},
		{Name: "password", Type: field.TypeString},
		{Name: "service_type", Type: field.TypeString},
	}
	// ProxyProvidersTable holds the schema information for the "proxy_providers" table.
	ProxyProvidersTable = &schema.Table{
		Name:       "proxy_providers",
		Columns:    ProxyProvidersColumns,
		PrimaryKey: []*schema.Column{ProxyProvidersColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "proxyprovider_name",
				Unique:  false,
				Columns: []*schema.Column{ProxyProvidersColumns[1]},
			},
			{
				Name:    "proxyprovider_name_service_type",
				Unique:  false,
				Columns: []*schema.Column{ProxyProvidersColumns[1], ProxyProvidersColumns[4]},
			},
			{
				Name:    "proxyprovider_name_username",
				Unique:  false,
				Columns: []*schema.Column{ProxyProvidersColumns[1], ProxyProvidersColumns[2]},
			},
			{
				Name:    "proxyprovider_name_service_type_username_password",
				Unique:  true,
				Columns: []*schema.Column{ProxyProvidersColumns[1], ProxyProvidersColumns[4], ProxyProvidersColumns[2], ProxyProvidersColumns[3]},
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Default: "uuid_generate_v4()"},
		{Name: "name", Type: field.TypeString},
		{Name: "contact", Type: field.TypeString, Size: 2147483647},
		{Name: "role", Type: field.TypeEnum, Enums: []string{"user", "admin"}, Default: "user"},
		{Name: "key", Type: field.TypeString, Unique: true, Size: 32},
		{Name: "balance", Type: field.TypeInt, Default: 0},
		{Name: "expires_at", Type: field.TypeTime, Nullable: true},
		{Name: "created_at", Type: field.TypeTime, Default: "now()"},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "user_name",
				Unique:  false,
				Columns: []*schema.Column{UsersColumns[1]},
			},
			{
				Name:    "user_key",
				Unique:  false,
				Columns: []*schema.Column{UsersColumns[4]},
			},
			{
				Name:    "user_key_balance",
				Unique:  false,
				Columns: []*schema.Column{UsersColumns[4], UsersColumns[5]},
			},
			{
				Name:    "user_key_expires_at",
				Unique:  false,
				Columns: []*schema.Column{UsersColumns[4], UsersColumns[6]},
			},
			{
				Name:    "user_key_expires_at_balance",
				Unique:  false,
				Columns: []*schema.Column{UsersColumns[4], UsersColumns[6], UsersColumns[5]},
			},
			{
				Name:    "user_contact",
				Unique:  false,
				Columns: []*schema.Column{UsersColumns[2]},
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ProxiesTable,
		ProxyProvidersTable,
		UsersTable,
	}
)

func init() {
	ProxiesTable.ForeignKeys[0].RefTable = ProxyProvidersTable
}
